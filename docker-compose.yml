services:
  # --- Dependencies ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports: [ "2181:2181" ]
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports: [ "9092:9092" ]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on: [ zookeeper ]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    ports: [ "9200:9200" ]
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://elasticsearch:9200" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # --- Microservices ---
  userservice:
    build: ./userservice
    container_name: userservice
    ports: [ "8082:8082" ]
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on: [ kafka ]

  loggingservice:
    build: ./loggingservice
    container_name: loggingservice
    ports: [ "8083:8083" ]
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      kafka:
        condition: service_started
      elasticsearch:
        condition: service_healthy

  productservice:
    build: ./productservice
    container_name: productservice
    ports: [ "8081:8081" ]
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on: [ kafka ]
    
  branchservice:
    build: ./branchservice
    container_name: branchservice
    ports: [ "8084:8084" ]
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on: [ kafka, productservice ]

  apigateway:
    build: ./apigateway
    container_name: apigateway
    ports: [ "8080:8080" ]
    depends_on:
      - userservice
      - productservice
      - branchservice
      - loggingservice

